// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaEscolasDeDanca.EscolasDeDancas.API.Data;

#nullable disable

namespace EscolasDeDanca.API.Migrations
{
    [DbContext(typeof(EscolasDancaContext))]
    [Migration("20230427174959_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SistemaEscolasDeDancas.EscolasDeDanca.Models.DbModels.Academico.TbAlunos", b =>
                {
                    b.Property<int>("IdAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_aluno");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<long>("Cpf")
                        .HasColumnType("bigint")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("endereco");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_escola");

                    b.Property<int>("IdMatricula")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_matricula");

                    b.Property<string>("NomeAluno")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_aluno");

                    b.Property<string>("Sexo")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("sexo");

                    b.Property<int>("Telefone")
                        .HasColumnType("int")
                        .HasColumnName("telefone");

                    b.HasKey("IdAluno");

                    b.ToTable("tb_alunos");
                });

            modelBuilder.Entity("SistemaEscolasDeDancas.EscolasDeDanca.Models.DbModels.Academico.TbModalidades", b =>
                {
                    b.Property<int>("IdModalidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_modalidade");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_escola");

                    b.Property<int>("IdNivel")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_nivel");

                    b.Property<string>("NomeModalidade")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_modalidade");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor");

                    b.HasKey("IdModalidade");

                    b.ToTable("tb_modalidades");
                });

            modelBuilder.Entity("SistemaEscolasDeDancas.EscolasDeDanca.Models.DbModels.Academico.TbNivel", b =>
                {
                    b.Property<int>("IdNivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_nivel");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_escola");

                    b.Property<int>("IdadeMaxima")
                        .HasColumnType("int(11)")
                        .HasColumnName("idade_maxima");

                    b.Property<int>("IdadeMinima")
                        .HasColumnType("int(11)")
                        .HasColumnName("idade_minima");

                    b.Property<string>("NomeNivel")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_nivel");

                    b.HasKey("IdNivel");

                    b.ToTable("tb_nivel");
                });

            modelBuilder.Entity("SistemaEscolasDeDancas.EscolasDeDanca.Models.DbModels.Academico.Tbprofessores", b =>
                {
                    b.Property<int>("IdProfessor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Int(11)")
                        .HasColumnName("id_professor");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<int>("Cpf")
                        .HasColumnType("int")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("endereco");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_escola");

                    b.Property<string>("NomeProfessor")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_professor");

                    b.Property<string>("Sexo")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("sexo");

                    b.Property<int>("Telefone")
                        .HasColumnType("int")
                        .HasColumnName("telefone");

                    b.HasKey("IdProfessor");

                    b.ToTable("tb_professores");
                });

            modelBuilder.Entity("SistemaEscolasDeDancas.EscolasDeDanca.Models.DbModels.Academico.Tbturmas", b =>
                {
                    b.Property<int>("IdTurma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_turma");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("date")
                        .HasColumnName("data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("date")
                        .HasColumnName("data_inicio");

                    b.Property<string>("DiasDaSemana")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dias");

                    b.Property<TimeSpan>("HorarioFinal")
                        .HasColumnType("time")
                        .HasColumnName("horario_final");

                    b.Property<TimeSpan>("HorarioInicial")
                        .HasColumnType("time")
                        .HasColumnName("horario_inicial");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_escola");

                    b.Property<int>("IdModalidade")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_modalidade");

                    b.Property<int>("IdProfessor")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_professor");

                    b.Property<string>("NomeTurma")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_turma");

                    b.HasKey("IdTurma");

                    b.ToTable("tb_turmas");
                });

            modelBuilder.Entity("SistemaEscolasDeDancas.EscolasDeDanca.Models.DbModels.TbEscolas", b =>
                {
                    b.Property<int>("IdEscola")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_escola");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<int>("Cnpj")
                        .HasColumnType("int")
                        .HasColumnName("cnpj");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("endereco");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("razao_social");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("site");

                    b.Property<int>("Telefone")
                        .HasColumnType("int")
                        .HasColumnName("telefone");

                    b.HasKey("IdEscola");

                    b.ToTable("tb_escola");
                });
#pragma warning restore 612, 618
        }
    }
}
